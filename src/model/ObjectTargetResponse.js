/**
 * Wikitude Studio API
 * The Wikitude Studio API is a RESTful API which is used to * organize and manipulate projects and its targets * create wtc/wto files which can be used to create trackers in the Wikitude SDK with the JavaScript API * generate/publish a cloud archive to the cloud recognition service (image targets only)  Download API clients: * [`OpenAPI 3.0`](https://www.wikitude.com/external/doc/documentation/studio-api/clients/wikitude_studio_api_client-openapi.zip) * [`JavaScript`](https://www.wikitude.com/external/doc/documentation/studio-api/clients/wikitude_studio_api_client-javascript.zip) * [`Python`](https://www.wikitude.com/external/doc/documentation/studio-api/clients/wikitude_studio_api_client-python.zip) * [`PHP`](https://www.wikitude.com/external/doc/documentation/studio-api/clients/wikitude_studio_api_client-php.zip) * [`TypeScript (NodeJS)`](https://www.wikitude.com/external/doc/documentation/studio-api/clients/wikitude_studio_api_client-typescript-node.zip) * [`Java`](https://www.wikitude.com/external/doc/documentation/studio-api/clients/wikitude_studio_api_client-java.zip) * [`Ruby`](https://www.wikitude.com/external/doc/documentation/studio-api/clients/wikitude_studio_api_client-ruby.zip)  This technical reference formally explains various API endpoints. Visit the [`Studio API documentation`](https://www.wikitude.com/external/doc/documentation/studio/) for a more general description. 
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.0.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ObjectTargetResponseResource', 'model/ObjectTargetResponseWtoFile'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ObjectTargetResponseResource'), require('./ObjectTargetResponseWtoFile'));
  } else {
    // Browser globals (root is window)
    if (!root.WikitudeStudioApiClient) {
      root.WikitudeStudioApiClient = {};
    }
    root.WikitudeStudioApiClient.ObjectTargetResponse = factory(root.WikitudeStudioApiClient.ApiClient, root.WikitudeStudioApiClient.ObjectTargetResponseResource, root.WikitudeStudioApiClient.ObjectTargetResponseWtoFile);
  }
}(this, function(ApiClient, ObjectTargetResponseResource, ObjectTargetResponseWtoFile) {
  'use strict';




  /**
   * The ObjectTargetResponse model module.
   * @module model/ObjectTargetResponse
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>ObjectTargetResponse</code>.
   * @alias module:model/ObjectTargetResponse
   * @class
   */
  var exports = function() {
    var _this = this;












  };

  /**
   * Constructs a <code>ObjectTargetResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ObjectTargetResponse} obj Optional instance to populate.
   * @return {module:model/ObjectTargetResponse} The populated <code>ObjectTargetResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('fileSize')) {
        obj['fileSize'] = ApiClient.convertToType(data['fileSize'], 'Number');
      }
      if (data.hasOwnProperty('modDat')) {
        obj['modDat'] = ApiClient.convertToType(data['modDat'], 'Number');
      }
      if (data.hasOwnProperty('creDat')) {
        obj['creDat'] = ApiClient.convertToType(data['creDat'], 'Number');
      }
      if (data.hasOwnProperty('isExpandable')) {
        obj['isExpandable'] = ApiClient.convertToType(data['isExpandable'], 'Boolean');
      }
      if (data.hasOwnProperty('realWorldScale')) {
        obj['realWorldScale'] = ApiClient.convertToType(data['realWorldScale'], 'Number');
      }
      if (data.hasOwnProperty('resource')) {
        obj['resource'] = ObjectTargetResponseResource.constructFromObject(data['resource']);
      }
      if (data.hasOwnProperty('thumbnailUrl')) {
        obj['thumbnailUrl'] = ApiClient.convertToType(data['thumbnailUrl'], 'String');
      }
      if (data.hasOwnProperty('wtoFile')) {
        obj['wtoFile'] = ObjectTargetResponseWtoFile.constructFromObject(data['wtoFile']);
      }
    }
    return obj;
  }

  /**
   * Unique identifier of the Target.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Name of the Target.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Type of the Target (\"Image\" for Image Targets or \"Object\" for Object Targets).
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * File size of the stored resource.
   * @member {Number} fileSize
   */
  exports.prototype['fileSize'] = undefined;
  /**
   * Modification timestamp.
   * @member {Number} modDat
   */
  exports.prototype['modDat'] = undefined;
  /**
   * Creation timestamp.
   * @member {Number} creDat
   */
  exports.prototype['creDat'] = undefined;
  /**
   * Indicates if an Object Target is extendable to improve tracking and recognition quality. Only Image-based Object Targets are extendable. 
   * @member {Boolean} isExpandable
   */
  exports.prototype['isExpandable'] = undefined;
  /**
   * The physical (real world) size of the Target, in millimeters. Set to null to reset.
   * @member {Number} realWorldScale
   */
  exports.prototype['realWorldScale'] = undefined;
  /**
   * @member {module:model/ObjectTargetResponseResource} resource
   */
  exports.prototype['resource'] = undefined;
  /**
   * URL to the Target resource thumbnail.
   * @member {String} thumbnailUrl
   */
  exports.prototype['thumbnailUrl'] = undefined;
  /**
   * @member {module:model/ObjectTargetResponseWtoFile} wtoFile
   */
  exports.prototype['wtoFile'] = undefined;



  return exports;
}));


